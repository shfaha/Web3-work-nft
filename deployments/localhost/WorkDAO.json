{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governanceToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xaa0e6463584ce1091d285f8672c0bd47dbc6bc61de071186bcc9600041c5ea7a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "1145643",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000040200000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000100000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000002000000000000000000020000000000000000000000000000000000000000000000000400000000000000000",
    "blockHash": "0xe4e6adec857224e61146660cb828db88aec05bb9ebff30bb01a0b38f9132ecf5",
    "transactionHash": "0xaa0e6463584ce1091d285f8672c0bd47dbc6bc61de071186bcc9600041c5ea7a",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0xaa0e6463584ce1091d285f8672c0bd47dbc6bc61de071186bcc9600041c5ea7a",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xe4e6adec857224e61146660cb828db88aec05bb9ebff30bb01a0b38f9132ecf5"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "1145643",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7d43e876077c920e85f0351a6168aeca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governanceToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorkDAO.sol\":\"WorkDAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/WorkDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n//\\u8fd9\\u662f\\u4e00\\u4e2a\\u7b80\\u5355\\u7684DAO\\u6cbb\\u7406\\u5408\\u7ea6\\uff0c\\u5141\\u8bb8\\u7528\\u6237\\u901a\\u8fc7\\u6301\\u6709\\u7684 ERC-20\\u4ee3\\u5e01 \\u53c2\\u4e0e\\u63d0\\u6848\\u548c\\u6295\\u7968\\u3002\\u6211\\u4eec\\u5047\\u8bbe\\u6cbb\\u7406\\u4ee3\\u5e01\\u662f\\u53e6\\u4e00\\u4e2aERC-20\\u4ee3\\u5e01\\u3002\\ncontract WorkDAO is Ownable {\\n    IERC20 public governanceToken;\\n\\n    // \\u63d0\\u6848\\u7ed3\\u6784\\u4f53\\n    struct Proposal {\\n        uint256 id;\\n        string description; //\\u63cf\\u8ff0\\n        uint256 voteCount; //\\u7968\\u6570\\n        bool executed; //\\u6267\\u884c\\n        mapping(address => bool) voted; //\\u6295\\u7968\\n    }\\n\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public proposalCount; //\\u63d0\\u6848\\u6570\\u91cf\\n\\n    event ProposalCreated(uint256 id, string description);\\n    event Voted(uint256 proposalId, address voter);\\n    event ProposalExecuted(uint256 proposalId);\\n\\n    constructor(address _governanceToken) Ownable(msg.sender) {\\n        governanceToken = IERC20(_governanceToken);\\n    }\\n\\n    // \\u521b\\u5efa\\u63d0\\u6848\\n    function createProposal(string memory description) external onlyOwner {\\n        uint256 proposalId = proposalCount;\\n        // proposals[proposalId] = Proposal(proposalId, description, 0, false);\\n        proposals[proposalId].id = proposalId;\\n        proposals[proposalId].description = description;\\n        proposals[proposalId].voteCount = 0;\\n        proposals[proposalId].executed = false;\\n        proposalCount += 1;\\n\\n        emit ProposalCreated(proposalId, description);\\n    }\\n\\n    // \\u6295\\u7968\\n    function vote(uint256 proposalId) external {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.voted[msg.sender], \\\"Already voted.\\\");\\n        require(governanceToken.balanceOf(msg.sender) > 0, \\\"No voting power.\\\");\\n\\n        proposal.voted[msg.sender] = true;\\n        proposal.voteCount += governanceToken.balanceOf(msg.sender); // \\u57fa\\u4e8e\\u6301\\u6709\\u7684\\u4ee3\\u5e01\\u6570\\u91cf\\u8ba1\\u7b97\\u6295\\u7968\\u6743\\u91cd\\n\\n        emit Voted(proposalId, msg.sender);\\n    }\\n\\n    // \\u6267\\u884c\\u63d0\\u6848\\n    function executeProposal(uint256 proposalId) external onlyOwner {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Already executed.\\\");\\n\\n        if (proposal.voteCount > 0) {\\n            proposal.executed = true;\\n            emit ProposalExecuted(proposalId);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0ff9bbb0e4babdda51fff22f9bd603d1354212d95701e6ebd5e2b58bf1e7e5a4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200157438038062001574833981810160405281019062000037919062000235565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000278565b60405180910390fd5b620000be816200010760201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000295565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fd82620001d0565b9050919050565b6200020f81620001f0565b81146200021b57600080fd5b50565b6000815190506200022f8162000204565b92915050565b6000602082840312156200024e576200024d620001cb565b5b60006200025e848285016200021e565b91505092915050565b6200027281620001f0565b82525050565b60006020820190506200028f600083018462000267565b92915050565b6112cf80620002a56000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a61461011f5780638da5cb5b14610129578063da35c66414610147578063f2fde38b14610165578063f96dae0a1461018157610093565b80630121b93f14610098578063013cf08b146100b45780630d61b519146100e757806349c2a1a614610103575b600080fd5b6100b260048036038101906100ad9190610988565b61019f565b005b6100ce60048036038101906100c99190610988565b610470565b6040516100de9493929190610a6f565b60405180910390f35b61010160048036038101906100fc9190610988565b610535565b005b61011d60048036038101906101189190610bf0565b61060c565b005b6101276106fc565b005b610131610710565b60405161013e9190610c7a565b60405180910390f35b61014f610739565b60405161015c9190610c95565b60405180910390f35b61017f600480360381019061017a9190610cdc565b61073f565b005b6101896107c5565b6040516101969190610d68565b60405180910390f35b60006002600083815260200190815260200160002090508060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c90610dcf565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102a29190610c7a565b602060405180830381865afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190610e04565b11610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a90610e7d565b60405180910390fd5b60018160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103d89190610c7a565b602060405180830381865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190610e04565b81600201600082825461042c9190610ecc565b925050819055507f030b0f8dcd86a031eddb071f91882edeac8173663ba775713b677b42b51be44b8233604051610464929190610f00565b60405180910390a15050565b600260205280600052604060002060009150905080600001549080600101805461049990610f58565b80601f01602080910402602001604051908101604052809291908181526020018280546104c590610f58565b80156105125780601f106104e757610100808354040283529160200191610512565b820191906000526020600020905b8154815290600101906020018083116104f557829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b61053d6107eb565b60006002600083815260200190815260200160002090508060030160009054906101000a900460ff16156105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d90610fd5565b60405180910390fd5b6000816002015411156106085760018160030160006101000a81548160ff0219169083151502179055507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516105ff9190610c95565b60405180910390a15b5050565b6106146107eb565b60006003549050806002600083815260200190815260200160002060000181905550816002600083815260200190815260200160002060010190816106599190611197565b506000600260008381526020019081526020016000206002018190555060006002600083815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506001600360008282546106b89190610ecc565b925050819055507f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e43281836040516106f0929190611269565b60405180910390a15050565b6107046107eb565b61070e6000610872565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6107476107eb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107b95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107b09190610c7a565b60405180910390fd5b6107c281610872565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107f3610936565b73ffffffffffffffffffffffffffffffffffffffff16610811610710565b73ffffffffffffffffffffffffffffffffffffffff161461087057610834610936565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108679190610c7a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61096581610952565b811461097057600080fd5b50565b6000813590506109828161095c565b92915050565b60006020828403121561099e5761099d610948565b5b60006109ac84828501610973565b91505092915050565b6109be81610952565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109fe5780820151818401526020810190506109e3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a26826109c4565b610a3081856109cf565b9350610a408185602086016109e0565b610a4981610a0a565b840191505092915050565b60008115159050919050565b610a6981610a54565b82525050565b6000608082019050610a8460008301876109b5565b8181036020830152610a968186610a1b565b9050610aa560408301856109b5565b610ab26060830184610a60565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610afd82610a0a565b810181811067ffffffffffffffff82111715610b1c57610b1b610ac5565b5b80604052505050565b6000610b2f61093e565b9050610b3b8282610af4565b919050565b600067ffffffffffffffff821115610b5b57610b5a610ac5565b5b610b6482610a0a565b9050602081019050919050565b82818337600083830152505050565b6000610b93610b8e84610b40565b610b25565b905082815260208101848484011115610baf57610bae610ac0565b5b610bba848285610b71565b509392505050565b600082601f830112610bd757610bd6610abb565b5b8135610be7848260208601610b80565b91505092915050565b600060208284031215610c0657610c05610948565b5b600082013567ffffffffffffffff811115610c2457610c2361094d565b5b610c3084828501610bc2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c6482610c39565b9050919050565b610c7481610c59565b82525050565b6000602082019050610c8f6000830184610c6b565b92915050565b6000602082019050610caa60008301846109b5565b92915050565b610cb981610c59565b8114610cc457600080fd5b50565b600081359050610cd681610cb0565b92915050565b600060208284031215610cf257610cf1610948565b5b6000610d0084828501610cc7565b91505092915050565b6000819050919050565b6000610d2e610d29610d2484610c39565b610d09565b610c39565b9050919050565b6000610d4082610d13565b9050919050565b6000610d5282610d35565b9050919050565b610d6281610d47565b82525050565b6000602082019050610d7d6000830184610d59565b92915050565b7f416c726561647920766f7465642e000000000000000000000000000000000000600082015250565b6000610db9600e836109cf565b9150610dc482610d83565b602082019050919050565b60006020820190508181036000830152610de881610dac565b9050919050565b600081519050610dfe8161095c565b92915050565b600060208284031215610e1a57610e19610948565b5b6000610e2884828501610def565b91505092915050565b7f4e6f20766f74696e6720706f7765722e00000000000000000000000000000000600082015250565b6000610e676010836109cf565b9150610e7282610e31565b602082019050919050565b60006020820190508181036000830152610e9681610e5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ed782610952565b9150610ee283610952565b9250828201905080821115610efa57610ef9610e9d565b5b92915050565b6000604082019050610f1560008301856109b5565b610f226020830184610c6b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f7057607f821691505b602082108103610f8357610f82610f29565b5b50919050565b7f416c72656164792065786563757465642e000000000000000000000000000000600082015250565b6000610fbf6011836109cf565b9150610fca82610f89565b602082019050919050565b60006020820190508181036000830152610fee81610fb2565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261101a565b611061868361101a565b95508019841693508086168417925050509392505050565b600061109461108f61108a84610952565b610d09565b610952565b9050919050565b6000819050919050565b6110ae83611079565b6110c26110ba8261109b565b848454611027565b825550505050565b600090565b6110d76110ca565b6110e28184846110a5565b505050565b5b81811015611106576110fb6000826110cf565b6001810190506110e8565b5050565b601f82111561114b5761111c81610ff5565b6111258461100a565b81016020851015611134578190505b6111486111408561100a565b8301826110e7565b50505b505050565b600082821c905092915050565b600061116e60001984600802611150565b1980831691505092915050565b6000611187838361115d565b9150826002028217905092915050565b6111a0826109c4565b67ffffffffffffffff8111156111b9576111b8610ac5565b5b6111c38254610f58565b6111ce82828561110a565b600060209050601f83116001811461120157600084156111ef578287015190505b6111f9858261117b565b865550611261565b601f19841661120f86610ff5565b60005b8281101561123757848901518255600182019150602085019450602081019050611212565b868310156112545784890151611250601f89168261115d565b8355505b6001600288020188555050505b505050505050565b600060408201905061127e60008301856109b5565b81810360208301526112908184610a1b565b9050939250505056fea2646970667358221220ebdd759aab582c8073e66cf4185bbc0c0546a9b0c00ef1bc462db0725fbb800064736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a61461011f5780638da5cb5b14610129578063da35c66414610147578063f2fde38b14610165578063f96dae0a1461018157610093565b80630121b93f14610098578063013cf08b146100b45780630d61b519146100e757806349c2a1a614610103575b600080fd5b6100b260048036038101906100ad9190610988565b61019f565b005b6100ce60048036038101906100c99190610988565b610470565b6040516100de9493929190610a6f565b60405180910390f35b61010160048036038101906100fc9190610988565b610535565b005b61011d60048036038101906101189190610bf0565b61060c565b005b6101276106fc565b005b610131610710565b60405161013e9190610c7a565b60405180910390f35b61014f610739565b60405161015c9190610c95565b60405180910390f35b61017f600480360381019061017a9190610cdc565b61073f565b005b6101896107c5565b6040516101969190610d68565b60405180910390f35b60006002600083815260200190815260200160002090508060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c90610dcf565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102a29190610c7a565b602060405180830381865afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190610e04565b11610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a90610e7d565b60405180910390fd5b60018160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103d89190610c7a565b602060405180830381865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190610e04565b81600201600082825461042c9190610ecc565b925050819055507f030b0f8dcd86a031eddb071f91882edeac8173663ba775713b677b42b51be44b8233604051610464929190610f00565b60405180910390a15050565b600260205280600052604060002060009150905080600001549080600101805461049990610f58565b80601f01602080910402602001604051908101604052809291908181526020018280546104c590610f58565b80156105125780601f106104e757610100808354040283529160200191610512565b820191906000526020600020905b8154815290600101906020018083116104f557829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b61053d6107eb565b60006002600083815260200190815260200160002090508060030160009054906101000a900460ff16156105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d90610fd5565b60405180910390fd5b6000816002015411156106085760018160030160006101000a81548160ff0219169083151502179055507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516105ff9190610c95565b60405180910390a15b5050565b6106146107eb565b60006003549050806002600083815260200190815260200160002060000181905550816002600083815260200190815260200160002060010190816106599190611197565b506000600260008381526020019081526020016000206002018190555060006002600083815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506001600360008282546106b89190610ecc565b925050819055507f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e43281836040516106f0929190611269565b60405180910390a15050565b6107046107eb565b61070e6000610872565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6107476107eb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107b95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107b09190610c7a565b60405180910390fd5b6107c281610872565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107f3610936565b73ffffffffffffffffffffffffffffffffffffffff16610811610710565b73ffffffffffffffffffffffffffffffffffffffff161461087057610834610936565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108679190610c7a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61096581610952565b811461097057600080fd5b50565b6000813590506109828161095c565b92915050565b60006020828403121561099e5761099d610948565b5b60006109ac84828501610973565b91505092915050565b6109be81610952565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109fe5780820151818401526020810190506109e3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a26826109c4565b610a3081856109cf565b9350610a408185602086016109e0565b610a4981610a0a565b840191505092915050565b60008115159050919050565b610a6981610a54565b82525050565b6000608082019050610a8460008301876109b5565b8181036020830152610a968186610a1b565b9050610aa560408301856109b5565b610ab26060830184610a60565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610afd82610a0a565b810181811067ffffffffffffffff82111715610b1c57610b1b610ac5565b5b80604052505050565b6000610b2f61093e565b9050610b3b8282610af4565b919050565b600067ffffffffffffffff821115610b5b57610b5a610ac5565b5b610b6482610a0a565b9050602081019050919050565b82818337600083830152505050565b6000610b93610b8e84610b40565b610b25565b905082815260208101848484011115610baf57610bae610ac0565b5b610bba848285610b71565b509392505050565b600082601f830112610bd757610bd6610abb565b5b8135610be7848260208601610b80565b91505092915050565b600060208284031215610c0657610c05610948565b5b600082013567ffffffffffffffff811115610c2457610c2361094d565b5b610c3084828501610bc2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c6482610c39565b9050919050565b610c7481610c59565b82525050565b6000602082019050610c8f6000830184610c6b565b92915050565b6000602082019050610caa60008301846109b5565b92915050565b610cb981610c59565b8114610cc457600080fd5b50565b600081359050610cd681610cb0565b92915050565b600060208284031215610cf257610cf1610948565b5b6000610d0084828501610cc7565b91505092915050565b6000819050919050565b6000610d2e610d29610d2484610c39565b610d09565b610c39565b9050919050565b6000610d4082610d13565b9050919050565b6000610d5282610d35565b9050919050565b610d6281610d47565b82525050565b6000602082019050610d7d6000830184610d59565b92915050565b7f416c726561647920766f7465642e000000000000000000000000000000000000600082015250565b6000610db9600e836109cf565b9150610dc482610d83565b602082019050919050565b60006020820190508181036000830152610de881610dac565b9050919050565b600081519050610dfe8161095c565b92915050565b600060208284031215610e1a57610e19610948565b5b6000610e2884828501610def565b91505092915050565b7f4e6f20766f74696e6720706f7765722e00000000000000000000000000000000600082015250565b6000610e676010836109cf565b9150610e7282610e31565b602082019050919050565b60006020820190508181036000830152610e9681610e5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ed782610952565b9150610ee283610952565b9250828201905080821115610efa57610ef9610e9d565b5b92915050565b6000604082019050610f1560008301856109b5565b610f226020830184610c6b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f7057607f821691505b602082108103610f8357610f82610f29565b5b50919050565b7f416c72656164792065786563757465642e000000000000000000000000000000600082015250565b6000610fbf6011836109cf565b9150610fca82610f89565b602082019050919050565b60006020820190508181036000830152610fee81610fb2565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261101a565b611061868361101a565b95508019841693508086168417925050509392505050565b600061109461108f61108a84610952565b610d09565b610952565b9050919050565b6000819050919050565b6110ae83611079565b6110c26110ba8261109b565b848454611027565b825550505050565b600090565b6110d76110ca565b6110e28184846110a5565b505050565b5b81811015611106576110fb6000826110cf565b6001810190506110e8565b5050565b601f82111561114b5761111c81610ff5565b6111258461100a565b81016020851015611134578190505b6111486111408561100a565b8301826110e7565b50505b505050565b600082821c905092915050565b600061116e60001984600802611150565b1980831691505092915050565b6000611187838361115d565b9150826002028217905092915050565b6111a0826109c4565b67ffffffffffffffff8111156111b9576111b8610ac5565b5b6111c38254610f58565b6111ce82828561110a565b600060209050601f83116001811461120157600084156111ef578287015190505b6111f9858261117b565b865550611261565b601f19841661120f86610ff5565b60005b8281101561123757848901518255600182019150602085019450602081019050611212565b868310156112545784890151611250601f89168261115d565b8355505b6001600288020188555050505b505050505050565b600060408201905061127e60008301856109b5565b81810360208301526112908184610a1b565b9050939250505056fea2646970667358221220ebdd759aab582c8073e66cf4185bbc0c0546a9b0c00ef1bc462db0725fbb800064736f6c63430008180033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/WorkDAO.sol:WorkDAO",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7723,
        "contract": "contracts/WorkDAO.sol:WorkDAO",
        "label": "governanceToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)909"
      },
      {
        "astId": 7741,
        "contract": "contracts/WorkDAO.sol:WorkDAO",
        "label": "proposals",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Proposal)7736_storage)"
      },
      {
        "astId": 7743,
        "contract": "contracts/WorkDAO.sol:WorkDAO",
        "label": "proposalCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)909": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)7736_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct WorkDAO.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)7736_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)7736_storage": {
        "encoding": "inplace",
        "label": "struct WorkDAO.Proposal",
        "members": [
          {
            "astId": 7725,
            "contract": "contracts/WorkDAO.sol:WorkDAO",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7727,
            "contract": "contracts/WorkDAO.sol:WorkDAO",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7729,
            "contract": "contracts/WorkDAO.sol:WorkDAO",
            "label": "voteCount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7731,
            "contract": "contracts/WorkDAO.sol:WorkDAO",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 7735,
            "contract": "contracts/WorkDAO.sol:WorkDAO",
            "label": "voted",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}